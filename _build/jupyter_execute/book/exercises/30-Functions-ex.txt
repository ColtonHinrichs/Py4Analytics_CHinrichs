# Create a function called 'add' which takes two variables x and y
def sum(x,y):
    print(f'The value of x is {x}')
    print(f'The value of y is {y}')
    # Assign the variable result to be the sum of x and y
    result = x+y
    return result

print(f'When we call the sum function the result is {sum(5,4)}')

first_number = 10
second_number = 12

# Using two variables to call the sum function and assigning the result to a third variable
sum_of_first_second = sum(first_number,second_number)

print(f"Let's use two variables to call the sum function: {sum_of_first_second}")

# Defining the greeting function
def greeting(author_name, user_name):
    ''' Greet a user 

        Parameters: 
            author_name (str) - the name of the program's author
            user_name (str) - the name of the user to greet

        Returns:
            A greeting (str)
    '''
    # author_name is supplied in the function call, and so is the user name
    
    # Get the current time
    current_hour = dt.now(pytz.timezone("US/Central")).hour

    # Set the greeting to default to nothing
    greeting = ''
    # If the the current hour is less than 12, change the greeting to 'Morning'
    # Otherwise, if the current hour is between 12 and 17 (5pm) set the greeting to 'Afternoon'
    # Otherwise, set the greeting to 'Evening'

    result = f'Good {greeting}, {user_name}!  My name is {my_name}'
    return result

# Assign the variable to my_name
my_name = ...

# Ask for the user's name
user_name = input('What is your name?')

# Call the function assigning the proper variables to the associated parameters
computer_greeting = greeting(...,...)

# Print the result

# Call the `greeting` function, but instead of asking for a user_name just assign the variable here.
my_name = ...
user_name = 'Mercedes'

# Call the function again
computer_greeting = greeting(...,...)

# Print the result
print(f'{computer_greeting}')


my_variable = 'Some String' # my_variable is a variable of the type/class string
my_variable.lower() # this says return me the same string but in lowercase.

# Here's an example of what a dictionary would look like from this sample sentence
#  See Jane run.  Is that Jane?

word_dictionary = { 'See': 1,  # See shows up 1 time in the word, so we set the value of the 'See' item to 1
                    'Jane': 2, # Jane is in the sentence 2 times, so we set the value of 'Jane' to 2
                    'run': 1,
                    'Is': 1,
                    'that': 1,
                 }

# Now let's see how to get the number of times a few items are found in the sentence
print(word_dictionary['Jane'])

# And here we can see all the items in the dictionary at once
print(word_dictionary)

# This is the sentence we'll use to test our close
sample_string = 'See Jane run.  Is that Jane'

# Let's start by making all the characters in the sentence lowercase,
#  This will help when we are comparing strings, because `See` isn't the same as `see`
#  and for our purposes we don't want to make a distiction

sample_string = ... #  Replace ... with a function that will convert the characters to lowercase

print(sample_string)

# That was pretty straightforward, next we need to break the sentences up into the different words

words = ... # replace the ... a function that will "split" the sentences into words

print(words)


# Initialize the empty dictionary
word_dictionary = {}

# For every word, 
for w in words:
    # Remove any punctuation from the end of the word
    ## YOUR CODE HERE ##
    
    # If the word already in the dictionary
    if w in word_dictionary.keys():
        # Increment the count by 1
        word_dictionary[w] = word_dictionary[w] + 1
    # Otherwise, set the count to 1
    ## YOUR CODE HERE ##

print (word_dictionary)

# Now bring it all together in a function

def word_counter(sentence, target_word):
    '''
    Count the nuber of times a particular word occurs in a given sentence, phrase or excerpt

    Parameters:
    ----------
        sentence (str) - the string to parse

        target_word (str) - the word to count in the supplied sentence

    Returns
    -------
        int 
            number of times the word is found in the sentence (-1, if not found)
    '''
    # Initialize the empty word dictionary
    word_dictionary = {}
    # Initialize the return value to -1
    count_of_target = -1

    # Split the supplied phrase `sentence` into a collection of words
    # For every word, 
    #   Remove any punctuation from the end of the word
    #   If the word already in the dictionary
    #       Increment the count by 1
    #   Otherwise, set the count to 1

    # Find the count associated with the `target_word` and assign it to count_of_target
    # Return the resulting count
    return count_of_target

print(f'As a test, this result should be 2.  Your function returned: {word_counter(sample_string,"jane")}')

# Run this cell to make sure your function works as expected
sample_string_2 = "A wonderful serenity has taken possession of my entire soul, like these sweet mornings of spring which I enjoy with my whole heart. I am alone, and feel the charm of existence in this spot, which was created for the bliss of souls like mine. I am so happy, my dear friend, so absorbed in the exquisite sense of mere tranquil existence, that I neglect my talents. I should be incapable of drawing a single stroke at the present moment; and yet I feel that I never was a greater artist than now. When, while the lovely"
sample_string_3 = "A wonderful serenity has taken possession of my entire soul, like these sweet mornings of spring which I enjoy with my whole heart. I am alone, and feel the charm of existence in this spot, which was created for the bliss of souls like mine. I am so happy, my dear friend, so absorbed in the exquisite sense of mere tranquil existence, that I neglect my talents. I should be incapable of drawing a single stroke at the present moment; and yet I feel that I never was a greater artist than now. When, while the lovely valley teems with vapour around me, and the meridian sun strikes the upper surface of the impenetrable foliage of my trees, and but a few stray gleams steal into the inner sanctuary, I throw myself down among the tall grass by the trickling stream; and, as I lie close to the earth, a thousand unknown plants are noticed by me: when I hear the buzz of the little world among the stalks, and grow familiar with the countless indescribable forms of the insects and flies, then I feel the presence of the Almighty, who formed us in his own image"
sample_string_4 = "A wonderful serenity has taken possession of my entire soul, like these sweet mornings of spring which I enjoy with my whole heart. I am alone, and feel the charm of existence in this spot, which was created for the bliss of souls like mine. I am so happy, my dear friend, so absorbed in the exquisite sense of mere tranquil existence, that I neglect my talents. I should be incapable of drawing a single stroke at the present moment; and yet I feel that I never was a greater artist than now. When, while the lovely valley teems with vapour around me, and the meridian sun strikes the upper surface of the impenetrable foliage of my trees, and but a few stray gleams steal into the inner sanctuary, I throw myself down among the tall grass by the trickling stream; and, as I lie close to the earth, a thousand unknown plants are noticed by me: when I hear the buzz of the little world among the stalks, and grow familiar with the countless indescribable forms of the insects and flies, then I feel the presence of the Almighty, who formed us in his own image, and the breath of that universal love which bears and sustains us, as it floats around us in an eternity of bliss; and then, my friend, when darkness overspreads my eyes, and heaven and earth seem to dwell in my soul and absorb its power, like the form of a beloved mistress, then I often think with longing, Oh, would I could describe these conceptions, could impress upon paper all that is living so full and warm within me, that it might be the mirror of my soul, as my soul is the mirror of the infinite God! O my friend -- but it is too much for my strength -- I sink under the weight of the splendour of these visions! A wonderful serenity has taken possession of my entire soul, like these sweet mornings of spring which I enjoy with my whole heart. I am alone, and feel the charm of existence in this spot, which was created for the bliss of souls like mine. I am so happy, my dear friend, so absorbed in the exquisite sense of mere tranquil existence, that I neglect my talents. I should be incapable of drawing a single stroke at the present moment; and yet I feel that I never was a greater artist than now. When, while the lovely valley teems with vapour around me, and the meridian sun strikes the upper surface of the impenetrable foliage of my trees, and but a few stray gleams steal into the inner sanctuary, I throw myself down among the tall grass by the trickling stream; and, as I lie close to the earth, a thousand unknown plants are noticed by me: when I hear the buzz of the little world among the stalks, and grow familiar with the"

print(f'Sample 2.  Expected: 4.  Your result: {word_counter(sample_string_2,"my")}')
print(f'Sample 3.  Expected: 19.  Your result: {word_counter(sample_string_3,"the")}')
print(f'Sample 3.  Expected: 42.  Your result: {word_counter(sample_string_4,"the")}')
print(f'Sample 3 (searching for feel).  Expected: 5.  Your result: {word_counter(sample_string_4,"feel")}')
